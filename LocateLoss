{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6f817395",
   "metadata": {},
   "outputs": [],
   "source": [
    "import feedparser\n",
    "from bs4 import BeautifulSoup\n",
    "import openai\n",
    "import pandas as pd\n",
    "import smtplib\n",
    "from email.mime.text import MIMEText\n",
    "from email.mime.multipart import MIMEMultipart\n",
    "from email.mime.image import MIMEImage\n",
    "import time\n",
    "import requests\n",
    "import time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9b310483",
   "metadata": {},
   "outputs": [],
   "source": [
    "industrial_places_df = pd.DataFrame()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6edbb7be",
   "metadata": {},
   "source": [
    "### 1-) Haber Toplama"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a1ef2c79",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_news(url=\"https://www.ntv.com.tr/turkiye.rss\"):\n",
    "    feed = feedparser.parse(url)\n",
    "    accident_news = []\n",
    "\n",
    "    for entry in feed.entries:\n",
    "        if \"yangın hasar\" in entry.title.lower() or \"yangın hasar\" in entry.summary.lower():\n",
    "            soup = BeautifulSoup(entry.summary, 'html.parser')\n",
    "            image_src = soup.img['src'] if soup.img else \"\"\n",
    "            summary_text = soup.get_text()\n",
    "            accident_news.append({\n",
    "                \"title\": entry.title,\n",
    "                \"link\": entry.link,\n",
    "                \"image\": image_src,\n",
    "                \"summary\": summary_text\n",
    "            })\n",
    "    return accident_news"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "64b32c44",
   "metadata": {},
   "source": [
    "### 2-) Haberden Lokasyon Bilgisi Çıkarma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "dc7af35b",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_extract_locations(summary_text, openai_api_key='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'):\n",
    "    openai.api_key = openai_api_key\n",
    "\n",
    "    prompt = f\"Bu metinde geçen en detaylı ve spesifik lokasyon bilgilerini listeleyin: {summary_text}\"\n",
    "\n",
    "    response = openai.Completion.create(\n",
    "      engine=\"gpt-3.5-turbo\",\n",
    "      prompt=prompt,\n",
    "      max_tokens=50\n",
    "    )\n",
    "\n",
    "    lokasyonlar = response.choices[0].text\n",
    "    location_to_search = lokasyonlar.replace(\"Geçen lokasyonlar: \", \"\")\n",
    "    location_to_search = location_to_search.strip()\n",
    "    print(location_to_search)\n",
    "\n",
    "    return location_to_search"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5bb0538b",
   "metadata": {},
   "source": [
    "### 3-) Lokasyondan Endüstriyel Yerlerin Tespiti"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "444baf57",
   "metadata": {},
   "source": [
    "#### 3.1) Adresin Geocode'unu Bulma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6d934b59",
   "metadata": {},
   "outputs": [],
   "source": [
    "def google_geocode(address, API_KEY):\n",
    "    base_url = \"https://maps.googleapis.com/maps/api/geocode/json\"\n",
    "    params = {\n",
    "        \"address\": address,\n",
    "        \"key\": API_KEY\n",
    "    }\n",
    "    response = requests.get(base_url, params=params)\n",
    "    \n",
    "    if response.status_code == 200:\n",
    "        data = response.json()\n",
    "        if data[\"status\"] == \"OK\":\n",
    "            location = data[\"results\"][0][\"geometry\"][\"location\"]\n",
    "            return location[\"lat\"], location[\"lng\"]\n",
    "    return None, None"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a11c872",
   "metadata": {},
   "source": [
    "#### 3.2) Açık Adresi Almak için place_id Değişkeni Alma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ba374632",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_place_details(place_id, API_KEY):\n",
    "    base_url = \"https://maps.googleapis.com/maps/api/place/details/json\"\n",
    "    params = {\n",
    "        \"place_id\": place_id,\n",
    "        \"key\": API_KEY\n",
    "    }\n",
    "    response = requests.get(base_url, params=params)\n",
    "    if response.status_code == 200:\n",
    "        data = response.json()\n",
    "        return data.get(\"result\", {})\n",
    "    return {}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e48d6c25",
   "metadata": {},
   "source": [
    "#### 3.3) Endüstriyel Yerlerin Tespiti"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6eb1beed",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_industrial_places_on_location(location, API_KEY):\n",
    "    query_terms = [\"Depo\", \"Üretim Tesisi\", \"Fabrika\", \"Enerji Santrali\", \"Rüzgar Türbini\", \"Liman Tesisi\"]\n",
    "    industrial_places = []\n",
    "    radius = 250  # 2.5 km\n",
    "    \n",
    "    latitude, longitude = google_geocode(address=location, API_KEY=API_KEY)\n",
    "    if latitude and longitude:\n",
    "        base_url = f\"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location={latitude},{longitude}&radius={radius}&key={API_KEY}\"\n",
    "\n",
    "        for query_term in query_terms:\n",
    "            url = f\"{base_url}&keyword={query_term}\"\n",
    "            response = requests.get(url)\n",
    "            if response.status_code == 200:\n",
    "                results = response.json()\n",
    "                places = results.get('results', [])\n",
    "                for place in places:\n",
    "                    print(place)\n",
    "                    name = place['name']\n",
    "                    lat = place['geometry']['location']['lat']\n",
    "                    lon = place['geometry']['location']['lng']\n",
    "                    place_id = place['place_id']\n",
    "                    \n",
    "                    details = get_place_details(place_id, API_KEY)\n",
    "                    full_address = details.get('formatted_address', '')\n",
    "                    industrial_places.append({\n",
    "                        'query_term': query_term,\n",
    "                        'name': name,\n",
    "                        'latitude': lat,\n",
    "                        'longitude': lon,\n",
    "                        'address': full_address\n",
    "                    })\n",
    "                    global industrial_places_df\n",
    "                    industrial_places_df = pd.DataFrame(industrial_places)\n",
    "            else:\n",
    "                print(\"Hata oluştu:\", response.content)\n",
    "    else:\n",
    "        print(\"Adresin koordinatlarına ulaşılamadı.\")\n",
    "        \n",
    "    return industrial_places"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "14268752",
   "metadata": {},
   "source": [
    "### 4-) Yakın Yerlerin İşaretlenmesi ve Haritanın Oluşturulması"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19215de9",
   "metadata": {},
   "source": [
    "#### 4.1) Haritanın Oluşturulması"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e8078254",
   "metadata": {},
   "outputs": [],
   "source": [
    "import folium\n",
    "\n",
    "def create_map_with_markers(locations, output_filename=\"harita.html\"):\n",
    "    avg_lat = sum([loc[\"latitude\"] for loc in locations]) / len(locations)\n",
    "    avg_long = sum([loc[\"longitude\"] for loc in locations]) / len(locations)\n",
    "\n",
    "    m = folium.Map(location=[avg_lat, avg_long], zoom_start=20)\n",
    "\n",
    "    # Ortalama konumun etrafına bir yuvarlak ekler\n",
    "    folium.Circle(\n",
    "        location=[avg_lat, avg_long],\n",
    "        radius=250,  # 2.5 km\n",
    "        color='blue',\n",
    "        fill=True,\n",
    "        fill_color='blue'\n",
    "    ).add_to(m)\n",
    "\n",
    "    # Ortalama konuma alev ikonu ekler\n",
    "    alev_icon = folium.CustomIcon(\n",
    "        icon_image='fire_icon.png',  # İkonun dosya yolu ya da URL'si\n",
    "        icon_size=(28, 30),\n",
    "        icon_anchor=(14, 15)\n",
    "    )\n",
    "    folium.Marker(\n",
    "        [avg_lat, avg_long],\n",
    "        icon=alev_icon\n",
    "    ).add_to(m)\n",
    "\n",
    "    # Diğer konumlara standart işaretçileri ve isimleri ekler\n",
    "    for location in locations:\n",
    "        folium.Marker(\n",
    "            [location[\"latitude\"], location[\"longitude\"]],\n",
    "            tooltip=location[\"name\"]\n",
    "        ).add_to(m)\n",
    "\n",
    "        folium.Marker(\n",
    "            [location[\"latitude\"], location[\"longitude\"]],\n",
    "            icon=folium.DivIcon(\n",
    "                html=f'<div style=\"font-size: 12px; background-color: transparent;\">{location[\"name\"]}</div>',\n",
    "                icon_size=(150, 36),\n",
    "                icon_anchor=(10, 0)\n",
    "            )\n",
    "        ).add_to(m)\n",
    "\n",
    "    m.save(output_filename)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c620fd03",
   "metadata": {},
   "source": [
    "#### 4.2) Oluşturulan Haritanın Ekran Görüntüsünün Alınması"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2f86cbee",
   "metadata": {},
   "outputs": [],
   "source": [
    "def save_html_as_screenshot(html_path, screenshot_path, delay=10):\n",
    "    driver = webdriver.Chrome()\n",
    "    driver.get(f\"file://{html_path}\")\n",
    "    time.sleep(delay)\n",
    "    driver.save_screenshot(screenshot_path)\n",
    "    driver.quit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f64ecfc5",
   "metadata": {},
   "source": [
    "#### 4.3) Harita Fonksiyonlarının Çalıştırılması"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "29b75ad7",
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_and_capture_map():\n",
    "    global industrial_places_df\n",
    "    locations = industrial_places_df[[\"name\", \"latitude\", \"longitude\"]].to_dict(orient='records')\n",
    "    \n",
    "    create_map_with_markers(locations)\n",
    "    html_path = '/Users/ahmetikbalkaymaz/Desktop/Project_Insurance_v1/harita.html'\n",
    "    screenshot_path = 'harita.png'\n",
    "    save_html_as_screenshot(html_path, screenshot_path)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69c3dbfc",
   "metadata": {},
   "source": [
    "### 5-) Mail Gönderme"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "6305856d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def send_email(content):\n",
    "    \n",
    "    msg = MIMEMultipart()\n",
    "    msg['Subject'] = 'Lockton |  Omni  - LocateLoss System'\n",
    "    msg['From'] = 'locktonomnihasarservis@gmail.com'\n",
    "    msg['To'] = 'osmanfurkankaymaz@gmail.com'\n",
    "\n",
    "    msg.attach(MIMEText(content, 'html'))\n",
    "    \n",
    "    with open(\"harita.png\", \"rb\") as attachment:\n",
    "        img = MIMEImage(attachment.read())\n",
    "        img.add_header(\"Content-Disposition\", \"attachment\", filename=\"harita.png\")\n",
    "        msg.attach(img)\n",
    "    \n",
    "    app_password = 'ufdjhzitbeacqzzc'\n",
    "\n",
    "    with smtplib.SMTP('smtp.gmail.com', 587) as server:\n",
    "        server.starttls()\n",
    "        server.login('locktonomnihasarservis@gmail.com', app_password)\n",
    "        server.send_message(msg)\n",
    "\n",
    "    print(\"E-posta başarıyla gönderildi.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9ac0882c",
   "metadata": {},
   "source": [
    "### 6-) Uygulamanın Çalıştırılması "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4bff24d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "def send_email_news_and_places():\n",
    "    \n",
    "    accident_news = get_news()\n",
    "    print(accident_news)\n",
    "    if not accident_news:\n",
    "        print(\"Kaza haberleri bulunamadı.\")\n",
    "        return\n",
    "\n",
    "    news = accident_news[0]\n",
    "    summary_text = news['summary']\n",
    "    print(summary_text)\n",
    "    locations = get_extract_locations(summary_text)\n",
    "    API_KEY = 'AIzaSyDmYSaU6H5tyxS6ietsY64-06qqMhMz2_4'\n",
    "    industrial_places = get_industrial_places_on_location(locations,API_KEY)\n",
    "    \n",
    "    metin = \"Yakın Bölgedeki Endüstriyel Alan ve Adresleri (Radius=250m)\"\n",
    "    \n",
    "    content = f'<img src=\"{news[\"image\"]}\" /><h1>{news[\"title\"]}</h1><p>{news[\"summary\"]}</p><br><h2>{metin}</h2><table style=\"border-collapse: collapse; width: 100%;\" border=\"1\"><tr><th>Kategori</th><th>Firma Adı</th><th>Konum</th><th>Adres</th></tr>'\n",
    "    for place in industrial_places:\n",
    "        content += f\"<tr><td>{place['query_term']}</td><td>{place['name']}</td><td>({place['latitude']}, {place['longitude']})</td><td>{place['address']}</td></tr>\"\n",
    "    content += \"</table>\"\n",
    "    \n",
    "    create_and_capture_map()\n",
    "    send_email(content)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "212f9837",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[{'title': \"Tuzla'da fabrika yangını\", 'link': 'https://www.ntv.com.tr/turkiye/tuzlada-fabrika-yangini,p5-jAPbZYU2wXlelWNbALA', 'image': 'https://cdn1.ntv.com.tr/gorsel/fBaJ7-CcE0yOwIQHeHM66A.jpg?width=1200&mode=crop&scale=both', 'summary': \"İstanbul Tuzla'da bir fabrikada çıkan yangın, itfaiye ekiplerince söndürüldü.Orhanlı Mahallesi Anıt Sokak'taki tek katlı madeni yağ üretimi yapılan bir fabrikada, henüz bilinmeyen bir nedenle yangın çıktı.Durumun bildirilmesi üzerine olay yerine itfaiye, polis ve sağlık ekipleri sevk edildi.İtfaiye ekiplerinin müdahalesinin ardından yangın kontrol altına alınarak söndürüldü.  Soğutma çalışması yapılan fabrikada, yangın hasar oluşturdu.\"}]\n",
      "İstanbul Tuzla'da bir fabrikada çıkan yangın, itfaiye ekiplerince söndürüldü.Orhanlı Mahallesi Anıt Sokak'taki tek katlı madeni yağ üretimi yapılan bir fabrikada, henüz bilinmeyen bir nedenle yangın çıktı.Durumun bildirilmesi üzerine olay yerine itfaiye, polis ve sağlık ekipleri sevk edildi.İtfaiye ekiplerinin müdahalesinin ardından yangın kontrol altına alınarak söndürüldü.  Soğutma çalışması yapılan fabrikada, yangın hasar oluşturdu.\n",
      "İstanbul Tuzla ve Orhanlı Mahallesi Anıt Sokak.\n",
      "{'business_status': 'OPERATIONAL', 'geometry': {'location': {'lat': 40.8942671, 'lng': 29.3656867}, 'viewport': {'northeast': {'lat': 40.89568432989272, 'lng': 29.36693727989272}, 'southwest': {'lat': 40.89298467010727, 'lng': 29.36423762010727}}}, 'icon': 'https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png', 'icon_background_color': '#7B9EB0', 'icon_mask_base_uri': 'https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet', 'name': 'KimberlyClark Depo', 'photos': [{'height': 4128, 'html_attributions': ['<a href=\"https://maps.google.com/maps/contrib/115242213012031043314\">A Google User</a>'], 'photo_reference': 'ATJ83zgYLk92qv3bwHZC7k-G4TSNo2DlqCU8DpX92Y_6vxrxA0q-l5A_RB6NIyiHfChVaBdMBo1u69g6budNXS9Cy1B9HC-7TEnT37D8PxROz3_ywntM6VlTBjIEDCj82uKVMBMBzCeziqosZunf4wfkcr0l13TBoItUqKwz1X7ogtZ6g29h', 'width': 3096}], 'place_id': 'ChIJ31Cy263ZyhQRarYRHTcrn0g', 'plus_code': {'compound_code': 'V9V8+M7 Tuzla, İstanbul', 'global_code': '8GGFV9V8+M7'}, 'rating': 3.3, 'reference': 'ChIJ31Cy263ZyhQRarYRHTcrn0g', 'scope': 'GOOGLE', 'types': ['storage', 'point_of_interest', 'establishment'], 'user_ratings_total': 12, 'vicinity': 'Orhanlı, Dosthane Sk. No:26, Tuzla'}\n",
      "{'business_status': 'OPERATIONAL', 'geometry': {'location': {'lat': 40.8982104, 'lng': 29.361417}, 'viewport': {'northeast': {'lat': 40.89946552989272, 'lng': 29.36283747989272}, 'southwest': {'lat': 40.89676587010727, 'lng': 29.36013782010728}}}, 'icon': 'https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png', 'icon_background_color': '#7B9EB0', 'icon_mask_base_uri': 'https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet', 'name': 'Fly Kimya', 'place_id': 'ChIJdfQyIrDZyhQR8vYchB_svE8', 'plus_code': {'compound_code': 'V9X6+7H Tuzla, İstanbul', 'global_code': '8GGFV9X6+7H'}, 'rating': 0, 'reference': 'ChIJdfQyIrDZyhQR8vYchB_svE8', 'scope': 'GOOGLE', 'types': ['point_of_interest', 'establishment'], 'user_ratings_total': 0, 'vicinity': 'Orhanlı, Demokrasi Cd. No:2, Tuzla'}\n",
      "{'business_status': 'OPERATIONAL', 'geometry': {'location': {'lat': 40.8923764, 'lng': 29.35886559999999}, 'viewport': {'northeast': {'lat': 40.89394162989273, 'lng': 29.36032402989272}, 'southwest': {'lat': 40.89124197010729, 'lng': 29.35762437010727}}}, 'icon': 'https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png', 'icon_background_color': '#7B9EB0', 'icon_mask_base_uri': 'https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet', 'name': 'Akdeniz Orman Ürünleri-Fabrika', 'opening_hours': {'open_now': True}, 'place_id': 'ChIJvZ7R_t_ZyhQRMQOHe8yhq9o', 'plus_code': {'compound_code': 'V9R5+XG Tuzla, İstanbul', 'global_code': '8GGFV9R5+XG'}, 'rating': 0, 'reference': 'ChIJvZ7R_t_ZyhQRMQOHe8yhq9o', 'scope': 'GOOGLE', 'types': ['point_of_interest', 'establishment'], 'user_ratings_total': 0, 'vicinity': 'Orhanlı, Dosthane Sk. No:18, Tuzla'}\n",
      "{'business_status': 'OPERATIONAL', 'geometry': {'location': {'lat': 40.9003069, 'lng': 29.3655859}, 'viewport': {'northeast': {'lat': 40.90166367989271, 'lng': 29.36693242989272}, 'southwest': {'lat': 40.89896402010727, 'lng': 29.36423277010728}}}, 'icon': 'https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png', 'icon_background_color': '#7B9EB0', 'icon_mask_base_uri': 'https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet', 'name': 'Ümit Ekinci Fabrika-Depo-Arsa', 'opening_hours': {'open_now': True}, 'place_id': 'ChIJfX-LthLFyhQRYz5XXAZz2Hc', 'plus_code': {'compound_code': 'W928+46 Tuzla, İstanbul', 'global_code': '8GGFW928+46'}, 'rating': 5, 'reference': 'ChIJfX-LthLFyhQRYz5XXAZz2Hc', 'scope': 'GOOGLE', 'types': ['real_estate_agency', 'point_of_interest', 'establishment'], 'user_ratings_total': 3, 'vicinity': 'Orhanlı, Tuzla'}\n",
      "{'business_status': 'OPERATIONAL', 'geometry': {'location': {'lat': 40.8978589, 'lng': 29.3654421}, 'viewport': {'northeast': {'lat': 40.89921302989272, 'lng': 29.36663747989272}, 'southwest': {'lat': 40.89651337010728, 'lng': 29.36393782010728}}}, 'icon': 'https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/generic_business-71.png', 'icon_background_color': '#7B9EB0', 'icon_mask_base_uri': 'https://maps.gstatic.com/mapfiles/place_api/icons/v2/generic_pinlet', 'name': 'Netaş Fabrika', 'opening_hours': {}, 'photos': [{'height': 1844, 'html_attributions': ['<a href=\"https://maps.google.com/maps/contrib/109353454236764717356\">AHMET HAYABUSA</a>'], 'photo_reference': 'ATJ83zgVgA9TBkFiVWz73UQERVe_iGlYCkhJYW8WseGzCfUrzlFgcI8hUDlkEmT8gsuEQTAv8eFzt69gyXlinvtBS4zgUmPevn9VRy5CjxIu7GBjpjBYM7RmEjoXvjx_LSocVDL7Sz7Gt1YB6ViaBulMbDMIX7_ebP1kTalNd5fM3-61WhwP', 'width': 4000}], 'place_id': 'ChIJ9dAH4LHZyhQRV5M4_H65v1A', 'plus_code': {'compound_code': 'V9X8+45 Tuzla, İstanbul', 'global_code': '8GGFV9X8+45'}, 'rating': 4.3, 'reference': 'ChIJ9dAH4LHZyhQRV5M4_H65v1A', 'scope': 'GOOGLE', 'types': ['point_of_interest', 'establishment'], 'user_ratings_total': 17, 'vicinity': 'Orhanlı, No:28, İrfan Cd., Tuzla'}\n",
      "E-posta başarıyla gönderildi.\n"
     ]
    }
   ],
   "source": [
    "send_email_news_and_places()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fac91144",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>query_term</th>\n",
       "      <th>name</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>address</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Depo</td>\n",
       "      <td>KimberlyClark Depo</td>\n",
       "      <td>40.894267</td>\n",
       "      <td>29.365687</td>\n",
       "      <td>Orhanlı, Dosthane Sk. No:26, 34956 Tuzla/İstan...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Üretim Tesisi</td>\n",
       "      <td>Fly Kimya</td>\n",
       "      <td>40.898210</td>\n",
       "      <td>29.361417</td>\n",
       "      <td>Orhanlı, Demokrasi Cd. No:2, 34956 Tuzla/İstan...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Fabrika</td>\n",
       "      <td>Akdeniz Orman Ürünleri-Fabrika</td>\n",
       "      <td>40.892376</td>\n",
       "      <td>29.358866</td>\n",
       "      <td>Orhanlı, Dosthane Sk. No:18, 34956 Tuzla/İstan...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Fabrika</td>\n",
       "      <td>Ümit Ekinci Fabrika-Depo-Arsa</td>\n",
       "      <td>40.900307</td>\n",
       "      <td>29.365586</td>\n",
       "      <td>Orhanlı, 34855 Tuzla/İstanbul, Türkiye</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Fabrika</td>\n",
       "      <td>Netaş Fabrika</td>\n",
       "      <td>40.897859</td>\n",
       "      <td>29.365442</td>\n",
       "      <td>No:28, Orhanlı, İrfan Cd., 34956 Tuzla/İstanbu...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      query_term                            name   latitude  longitude   \n",
       "0           Depo              KimberlyClark Depo  40.894267  29.365687  \\\n",
       "1  Üretim Tesisi                       Fly Kimya  40.898210  29.361417   \n",
       "2        Fabrika  Akdeniz Orman Ürünleri-Fabrika  40.892376  29.358866   \n",
       "3        Fabrika   Ümit Ekinci Fabrika-Depo-Arsa  40.900307  29.365586   \n",
       "4        Fabrika                   Netaş Fabrika  40.897859  29.365442   \n",
       "\n",
       "                                             address  \n",
       "0  Orhanlı, Dosthane Sk. No:26, 34956 Tuzla/İstan...  \n",
       "1  Orhanlı, Demokrasi Cd. No:2, 34956 Tuzla/İstan...  \n",
       "2  Orhanlı, Dosthane Sk. No:18, 34956 Tuzla/İstan...  \n",
       "3             Orhanlı, 34855 Tuzla/İstanbul, Türkiye  \n",
       "4  No:28, Orhanlı, İrfan Cd., 34956 Tuzla/İstanbu...  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "industrial_places_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "db7a2238",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9 (tensorflow)",
   "language": "python",
   "name": "tensorflow"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
